@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section head {
    <title>系统用户</title>
}
<el-container style="height:100vh;overflow: hidden;">
    <el-main>
        <el-form label-width="auto" :inline="true">
            <div>
                <el-form-item label="账户" prop="desc" style="margin-bottom:5px;">
                    <el-input v-model="state.qry.name" placeholder="部门名称" clearable></el-input>
                </el-form-item>
                
                <el-form-item label="状态" prop="desc" style="margin-bottom:5px;">
                    <el-select v-model="state.qry.status" placeholder="不限" clearable style="width:200px">
                        <el-option label="是" value="1"></el-option>
                        <el-option label="否" value="2"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item prop="desc" style="margin-bottom:5px;">
                    <el-button type="primary" v-on:click="pageIndex=1;loadData()" id="query">查询</el-button>
                    <el-button v-on:click="resetQueryForm">重置</el-button>
                </el-form-item>
            </div>
        </el-form>
               <el-form label-width="100px" :inline="true" style="margin-top:30px;">
                <el-form-item prop="desc" style="margin-bottom:5px;">
                    <el-button type="primary" v-on:click="add">新增</el-button>
                </el-form-item>
        </el-form>
        <el-table :data="state.dataList"
                  border
                  height="100%"
                  v-loading="state.dataloading"
                 >
            <el-table-column label="#" width="60" align="center">
                <template #default="scope">
                    <div style="text-align:left">
                        <span>{{ (state.qry.pageIndex) * state.qry.pageSize + scope.$index +1   }}</span>
                    </div>
                </template>
            </el-table-column>
            <el-table-column label="用户名" width="180px"align="left" show-overflow-tooltip="true">
                <template #default="scope">
                    {{ scope.row.realName }}
                </template>
            </el-table-column>
               <el-table-column label="登录账户" width="auto" max-width="200px" align="center" show-overflow-tooltip="true">
                <template #default="scope">
                    {{ scope.row.accountName }}
                </template>
            </el-table-column>
               <el-table-column label="联系电话" width="140px" align="center" show-overflow-tooltip="true">
                <template #default="scope" align="right">
                    {{ scope.row.contactPhone }}
                </template>
            </el-table-column>
               <el-table-column label="部门" width="auto" max-width="120px" align="center" show-overflow-tooltip="true">
                <template #default="scope">
                    {{ scope.row.deptName }}
                </template>
            </el-table-column>
            
            <el-table-column label="是否启用" width="120px" align="center">
                <template #default="scope">
                    <div style="text-align:center">
                        <span>{{  scope.row.isEnabledName }}</span>
                    </div>
                </template>
            </el-table-column>
             <el-table-column label="创建日期" width="160px" align="center">
                <template #default="scope">
                    <div style="text-align:right">
                        <p style="margin:0px;text-align:center">{{ scope.row.createTime}}</p>
                    </div>
                </template>
            </el-table-column>

            <el-table-column label="操作" prop="opt" width="240px" align="center">
                <template #default="scope">
                    <div style="text-align:center">
                       <el-button size="small" v-on:click="edit(scope.row)">编辑</el-button>
                       <el-button size="small" type="danger" v-on:click="deleteItem(scope.row.id)">删除 </el-button>
                    </div>
                </template>
            </el-table-column>

        </el-table>
        <div style=" height:35px;padding: 10px 0px 0px 20px; ">
            <el-pagination v-model:current-page="state.qry.pageIndex"
                           v-model:page-size="state.qry.pageSize"
                           :page-sizes="[20, 50, 100,500]"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="state.qry.totalCount"
                           v-on:size-change="handleSizeChange"
                           v-on:current-change="handleCurrentChange" style="float:right;"></el-pagination>

        </div>
    </el-main>
</el-container>

<!-- 新增弹窗 -->
  <el-dialog v-model="dialog.openAddDialog"  :title="dialog.title"  close="dialog.openAddDialog=false" :close-on-click-modal="false" draggable width="600px">
    <el-form :model="dialog.formData"  label-width="auto" :rules="FormDataRules" ref="FormDataRef">
      <el-form-item label="用户名" required  prop="realName">
        <el-input v-model="dialog.formData.realName" autocomplete="off" clearable placeholder="请输入姓名(昵称)" maxlength="30"></el-input>
      </el-form-item>
      <el-form-item label="登录账户" required  prop="accountName">
        <el-input v-model="dialog.formData.accountName" autocomplete="off" clearable placeholder="请输入登录账户" maxlength="8"></el-input>
      </el-form-item>
       <el-form-item label="联系电话" required  prop="contactPhone">
        <el-input v-model="dialog.formData.contactPhone" autocomplete="off"  clearable placeholder="请输入联系电话" maxlength="15"></el-input>
      </el-form-item>
       <el-form-item label="部门"    prop="deptId">
        <el-tree-select v-model="dialog.formData.deptId":data="dialog.deptData" check-strictly :render-after-expand="false" ></el-tree-select>
      </el-form-item>
       <el-form-item label="是否启用" label-width="auto">
        <el-switch v-model="dialog.formData.isEnabled" inline-prompt active-text="是" inactive-text="否"/>
      </el-form-item>
    </el-form>
    <template #footer>
      <div class="dialog-footer">
         <el-button v-on:click="dialog.openAddDialog=false" >关闭 </el-button>
        <el-button type="primary" v-on:click="save" >保存 </el-button>
      </div>
    </template>
  </el-dialog>



@section scripts {
    <script type="text/javascript">
        const app = Vue.createApp({
        setup() {
           const state = Vue.reactive({
                dataLoading: false,
                qry: {
                    name: null,
                    status: null,
                    pageIndex: 0,
                    pageSize: 20,
                    totalCount: 0,
                },
                dataList: []

            });
         const initDataForm = () => ({
                    realName: ``,
                    accountName: ``,
                    contactPhone:``,
                    deptId: ``,
                    isEnabled: true
                    });
        const dialog = Vue.reactive({
                    title: '新增',
                    openAddDialog: false,
                    formData: {...initDataForm()},
                    deptData:@Html.Raw(ViewBag.DeptData)
                });
            const id=Vue.ref(null);
     
         const FormDataRef = Vue.ref(null);

           Vue.onMounted(() => { loadData()  });
            const loadData = () => {
                state.dataLoading = true;
                axios.post(`/sysuser/PageList`, {...state.qry}).then(response => {
                    let {data,status}=response;
                    Object.assign(state,
                                {dataList:data.data.list,
                            qry:{
                                    pageIndex:data.data.pageIndex,
                                    pageSize:data.data.pageSize,
                                    totalCount:data.data.total,
                                    name:state.qry.name,
                                    status:state.qry.status
                                }
                    });
                })
                state.dataLoading = false;
                };
            const handleSizeChange = (val) => {
                    state.qry.pageIndex = 1;
                    state.qry.pageSize = val;
                    loadData();
                        };
            const handleCurrentChange = (val) => {
                        state.qry.pageIndex = val;
                        loadData();
                    };
            const deleteItem =  (id) => {

              ElMessageBox.confirm('您确定删除吗?', { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning', })
              .then(() => {
                    state.dataLoading = true;
                     axios.delete(`/sysuser/${id}/delete`)
                    .then(response => {
                        let {data,status}=response;
                        if (status == 200&&data.isSuccess ){
                            ElMessage({ message: `删除成功!`,  type: `success` });
                             loadData();
                            return;
                        }
                        ElMessage.error(data.message);
                    })
                    state.dataLoading = false;
                    })
                    .catch(() => { console.log('取消删除'); });
              }
            //重置查询表单
            const resetQueryForm=()=>{
                 state.qry  = {...state.qry,   name: null, status: null };
                };

           const FormDataRules = {
                    realName: [{ required: true, message: '用户名必填!', trigger: 'blur' }],
                    accountName: [{ required: true, message: '登录账户必填!', trigger: 'blur' }],
                    contactPhone: [{ required: true, message: '联系电话必填!', trigger: 'blur' },
                                   { pattern: /^1[3456789]\d{9}$/, message: '手机号码格式不正确', trigger: 'blur' }],
                    //deptId: [{ required: true, message: '部门必填!', trigger: 'blur' }]
                };

            const add = () => {
                    dialog.title = "新增用户";
                    dialog.openAddDialog = true;
                    FormDataRef.value?.resetFields(); 
                    Object.assign(dialog.formData, initDataForm());
                    id.value = null;
                };
            const edit=(row)=>{
                    dialog.title = `编辑用户【${row.realName}】`;
                    dialog.openAddDialog = true;
                    FormDataRef.value?.resetFields();  
                    Object.assign(dialog.formData, initDataForm());
                    axios.get(`/sysuser/${row.id}/details`).then(response => {
                          if(response.status == 200)
                          {
                              dialog.formData={...response.data.data, isEnabled: response.data.data.isEnabled==1?true:false};
                              id.value = row.id;
                          }
                      });
                }

                //保存
              const save = async () => {
                let isValid = await FormDataRef.value.validate(); 
                if(!isValid) return ElMessage({ message: "请完善表单信息!", type: "error" });
                let requestData = { ...dialog.formData,  isEnabled: dialog.formData.isEnabled  ? 1 : 0 };
                 let url = id.value  ? `/SysUser/${id.value}/update`  : '/SysUser/create';
                 let method = id.value  ? 'put' : 'post';
                 let response = await axios[method](url, requestData);
                    if (response.status  === 200) {
                          ElMessage({ message: "保存成功!", type: "success" });
                          dialog.openAddDialog  = false;
                          loadData();
                        }
                    }

            return {state,loadData,handleSizeChange,handleCurrentChange,deleteItem,resetQueryForm,dialog,add,FormDataRules,FormDataRef,save,edit};
                }
            });
            app.use(ElementPlus,{ locale: ElementPlusLocaleZhCn });
            app.mount('#app');
    </script>

}